{"version":3,"sources":["webpack:///./node_modules/lodash/isSymbol.js","webpack:///./src/pages/about.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/_baseToString.js"],"names":["baseGetTag","isObjectLike","module","exports","value","Container","styled","Markdown","attrs","as","theme","device","sm","About","md","useStaticQuery","allMarkdownRemark","edges","node","html","title","dangerouslySetInnerHTML","__html","rhythm","Symbol","objectProto","Object","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","isOwn","call","tag","unmasked","e","result","freeGlobal","freeSelf","self","root","Function","getRawTag","objectToString","global","isArray","Array","array","iteratee","accumulator","initAccum","index","length","baseToString","arrayMap","isSymbol","symbolProto","symbolToString"],"mappings":"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","file":"component---src-pages-about-js-80efbb06bc82a2677d64.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from 'styled-components';\nimport SEO from 'components/seo';\nimport Layout from 'layout/layout';\nimport Markdown from 'styles/markdown';\nimport { rhythm } from 'styles/typography';\n\nconst About = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n        edges {\n          node {\n            html\n          }\n        }\n      }\n    }\n  `);\n\n  const md = data.allMarkdownRemark.edges[0].node.html;\n\n  return (\n    <Layout>\n      <SEO title=\"손찬욱 Blog | About\" />\n      <Container\n        dangerouslySetInnerHTML={{ __html: md }}\n        rhythm={rhythm}\n      ></Container>\n    </Layout>\n  );\n};\n\nconst Container = styled(Markdown).attrs({\n  as: 'main',\n})`\n  width: var(--post-width);\n  margin: 0 auto;\n  margin-top: 80px;\n  margin-bottom: 6rem;\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    margin-top: var(--sizing-xl);\n    width: 87.5%;\n  }\n\n  h1 {\n    margin-bottom: 2rem;\n  }\n\n  h2 {\n    margin-top: var(--sizing-lg);\n\n    @media (max-width: ${({ theme }) => theme.device.sm}) {\n      font-size: 1.75rem;\n    }\n  }\n\n  h3 {\n    @media (max-width: ${({ theme }) => theme.device.sm}) {\n      font-size: 1.25rem;\n    }\n  }\n`;\n\nexport default About;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"],"sourceRoot":""}