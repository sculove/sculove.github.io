{"version":3,"sources":["webpack:///./src/components/tagsCount.js","webpack:///./src/templates/blogTag.js"],"names":["TagCountWrapper","styled","div","TagButton","Link","TagsCount","tags","map","tag","key","name","to","kebabCase","count","Tags","pageContext","data","allMarkdownRemark","edges","totalCount","tagHeader","title","node","frontmatter","date","slug","fields"],"mappings":"6MAKMA,EAAkBC,IAAOC,IAAV,gFAAGD,CAAH,6BAIRE,EAAYF,YAAOG,QAAV,0EAAGH,CAAH,kdAwBP,SAASI,EAAT,GAAmC,IAAD,IAAbC,YAAa,MAAN,GAAM,EAC/C,OACE,kBAACN,EAAD,KACGM,aADH,EACGA,EAAMC,KAAI,SAACC,GAAD,OACT,kBAACL,EAAD,CACEM,IAAG,YAAcD,EAAIE,KACrBC,GAAE,QAAUC,IAAUJ,EAAIE,OAEzBF,EAAIE,KACL,8BAAOF,EAAIK,YCHNC,UAhCF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBR,EAAcO,EAAdP,IAAKF,EAASS,EAATT,KACb,EAA8BU,EAAKC,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEX,EAFF,IAGf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKa,MAAM,QACX,kBAAC,OAAD,KACE,kBAAC,UAAD,KACE,kBAAChB,EAAD,CAAWC,KAAMA,IACjB,4BAAKc,GACL,4BACGF,EAAMX,KAAI,YAAe,IAAZe,EAAW,EAAXA,KACZ,EAAwBA,EAAKC,YAArBF,EAAR,EAAQA,MAAOG,EAAf,EAAeA,KACPC,EAASH,EAAKI,OAAdD,KACR,OACE,wBAAIhB,IAAKgB,GACP,kBAAC,OAAD,CAAMd,GAAIc,GACPJ,EADH,KACYG,EADZ","file":"component---src-templates-blog-tag-js-ff3d39a81280baeae06e.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nconst TagCountWrapper = styled.div`\n  margin: 10px 0px 20px 0;\n`;\n\nexport const TagButton = styled(Link)`\n  cursor: pointer;\n  display: inline-block;\n  margin: 0 3px 6px 3px;\n  background-color: var(--color-floating-button);\n  padding: 5px 5px;\n  border-radius: var(--border-radius-base);\n  font-size: 0.7rem;\n  font-weight: var(--font-weight-semi-bold);\n\n  :focus {\n    outline: none;\n  }\n\n  &:hover {\n    color: var(--color-floating-button-text-hover);\n    background-color: var(--color-floating-button-hover);\n  }\n\n  &:focus-visible {\n    color: var(--color-floating-button-text-hover);\n    background-color: var(--color-floating-button-hover);\n  }\n`;\nexport default function TagsCount({ tags = [] }) {\n  return (\n    <TagCountWrapper>\n      {tags?.map((tag) => (\n        <TagButton\n          key={`tagCount-${tag.name}`}\n          to={`/tag/${kebabCase(tag.name)}`}\n        >\n          {tag.name}\n          <span>{tag.count}</span>\n        </TagButton>\n      ))}\n    </TagCountWrapper>\n  );\n}\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from 'layout/layout';\nimport SEO from 'components/seo';\nimport { Main, Content } from 'pages/index';\nimport TagsCount from '../components/tagsCount';\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag, tags } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`;\n  return (\n    <Layout>\n      <SEO title=\"Tag\" />\n      <Main>\n        <Content>\n          <TagsCount tags={tags}></TagsCount>\n          <h1>{tagHeader}</h1>\n          <ul>\n            {edges.map(({ node }) => {\n              const { title, date } = node.frontmatter;\n              const { slug } = node.fields;\n              return (\n                <li key={slug}>\n                  <Link to={slug}>\n                    {title} ({date})\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </Content>\n      </Main>\n    </Layout>\n  );\n};\n\nexport default Tags;\n\nexport const query = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}