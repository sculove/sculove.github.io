{"version":3,"sources":["webpack:///./src/utils/glowParticle.js","webpack:///./src/pages/404.js"],"names":["PI2","Math","PI","GlowParticle","x","y","radius","rgb","this","vx","random","vy","sinValue","animate","ctx","stageWidth","stageHeight","sin","beginPath","g","createRadialGradient","addColorStop","r","b","fillStyle","arc","fill","COLORS","Container","styled","main","Divider","div","TitleWrap","Title","h1","Desc","h2","Canvas","canvas","NotFound","canvasRef","useRef","useState","particles","setParticles","isCreated","requestRef","useLayoutEffect","canvasObj","current","getContext","document","body","clientWidth","clientHeight","pixelRatio","window","devicePixelRatio","maxRadius","max","floor","minRadius","resize","width","height","scale","globalCompositeOperation","clearRect","colorIndex","i","newParticle","length","prevParticles","createParticles","render","item","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","title","ref"],"mappings":"2KAAMA,EAAgB,EAAVC,KAAKC,GAyDFC,E,WAtDb,cAAoC,IAAtBC,EAAqB,EAArBA,EAAGC,EAAkB,EAAlBA,EAAGC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,IAC1BC,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,EACTG,KAAKF,OAASA,EACdE,KAAKD,IAAMA,EAEXC,KAAKC,GAAqB,EAAhBR,KAAKS,SACfF,KAAKG,GAAqB,EAAhBV,KAAKS,SAEfF,KAAKI,SAAWX,KAAKS,S,mBAGvBG,QAAA,SAAQC,EAAKC,EAAYC,GACvBR,KAAKI,UAAY,IACjBJ,KAAKF,QAAUL,KAAKgB,IAAIT,KAAKI,UAC7BJ,KAAKJ,GAAKI,KAAKC,GACfD,KAAKH,GAAKG,KAAKG,GAEXH,KAAKJ,EAAI,GACXI,KAAKC,KAAO,EACZD,KAAKJ,GAAK,IACDI,KAAKJ,EAAIW,IAClBP,KAAKC,KAAO,EACZD,KAAKJ,GAAK,IAGRI,KAAKH,EAAI,GACXG,KAAKG,KAAO,EACZH,KAAKH,GAAK,IACDG,KAAKH,EAAIW,IAClBR,KAAKG,KAAO,EACZH,KAAKH,GAAK,IAGZS,EAAII,YAEJ,IAAMC,EAAIL,EAAIM,qBACZZ,KAAKJ,EACLI,KAAKH,EACS,IAAdG,KAAKF,OACLE,KAAKJ,EACLI,KAAKH,EACLG,KAAKF,QAGPa,EAAEE,aAAa,EAAf,QAA0Bb,KAAKD,IAAIe,EAAnC,KAAyCd,KAAKD,IAAIY,EAAlD,KAAwDX,KAAKD,IAAIgB,EAAjE,QACAJ,EAAEE,aAAa,EAAf,QAA0Bb,KAAKD,IAAIe,EAAnC,KAAyCd,KAAKD,IAAIY,EAAlD,KAAwDX,KAAKD,IAAIgB,EAAjE,QAEAT,EAAIU,UAAYL,EAChBL,EAAIW,IAAIjB,KAAKJ,EAAGI,KAAKH,EAAGG,KAAKF,OAAQ,EAAGN,GAAK,GAC7Cc,EAAIY,Q,KC/CFC,EAAS,CACb,CAAEL,EAAG,IAAKH,EAAG,IAAKI,EAAG,GACrB,CAAED,EAAG,IAAKH,EAAG,GAAII,EAAG,IACpB,CAAED,EAAG,IAAKH,EAAG,GAAII,EAAG,KACpB,CAAED,EAAG,IAAKH,EAAG,GAAII,EAAG,IACpB,CAAED,EAAG,IAAKH,EAAG,IAAKI,EAAG,IA2FjBK,EAAYC,IAAOC,KAAV,wEAAGD,CAAH,4EAOTE,EAAUF,IAAOG,IAAV,sEAAGH,CAAH,0FAOPI,EAAYJ,IAAOG,IAAV,wEAAGH,CAAH,iGASTK,EAAQL,IAAOM,GAAV,oEAAGN,CAAH,iCAKLO,EAAOP,IAAOQ,GAAV,mEAAGR,CAAH,mCAKJS,EAAST,IAAOU,OAAV,qEAAGV,CAAH,yDAQGW,UAjIE,WACf,IAAMC,EAAYC,iBAAO,MACzB,EAAkCC,mBAAS,IAApCC,EAAP,KAAkBC,EAAlB,KACMC,EAAYJ,kBAAO,GACnBK,EAAaL,iBAAO,MAqE1B,OAnEAM,2BAAgB,WACd,IAAMC,EAAYR,EAAUS,QACtBpC,EAAMmC,EAAUE,WAAW,MAC7BpC,EAAaqC,SAASC,KAAKC,YAC3BtC,EAAcoC,SAASC,KAAKE,aAC1BC,EAAaC,OAAOC,iBAAmB,EAAI,EAAI,EAG/CC,EAAY1D,KAAK2D,IAAI3D,KAAK4D,MAAM9C,EAAa,GAAI,KACjD+C,EAAY7D,KAAK2D,IAAI3D,KAAK4D,MAAM9C,EAAa,GAAI,KA8BjDgD,EAAS,WACbhD,EAAaqC,SAASC,KAAKC,YAC3BtC,EAAcoC,SAASC,KAAKE,aAE5BN,EAAUe,MAAQjD,EAAayC,EAC/BP,EAAUgB,OAASjD,EAAcwC,EACjC1C,EAAIoD,MAAMV,EAAYA,GACtB1C,EAAIqD,yBAA2B,aAC/BrD,EAAIsD,UAAU,EAAG,EAAGrD,EAAYC,GAEhC8B,EAAUI,SAAU,EAtCE,WACtB,IAAImB,EAAa,EACjBxB,EAAa,IAEb,IAJ4B,eAInByB,GACP,IAAMC,EAAc,IAAIpE,EAAa,CACnCC,EAAGH,KAAKS,SAAWK,EACnBV,EAAGJ,KAAKS,SAAWM,EACnBV,OAAQL,KAAKS,UAAYiD,EAAYG,GAAaA,EAClDvD,IAAKoB,EAAO0C,OAGRA,GAAc1C,EAAO6C,SAAQH,EAAa,GAEhDxB,GAAa,SAAC4B,GAAD,4BAAuBA,GAAvB,CAAsCF,QAV5CD,EAAI,EAAGA,EARK,EAQeA,IAAM,IAmC1CI,IAWF,OAPO5B,EAAUI,QAzBF,SAATyB,IACJ7D,EAAIsD,UAAU,EAAG,EAAGrD,EAAYC,GAChC,IAAK,IAAIsD,EAAI,EAAGA,EAxBK,EAwBeA,IAAK,CACvC,IAAMM,EAAOhC,EAAU0B,GACvB,IAAKM,EAAM,OACXA,EAAK/D,QAAQC,EAAKC,EAAYC,GAEhC+B,EAAWG,QAAU2B,sBAAsBF,GAmBtCA,GADmBZ,IAK1BN,OAAOqB,iBAAiB,SAAUf,GAE3B,WACLN,OAAOsB,oBAAoB,SAAUhB,GACrCN,OAAOuB,qBAAqBjC,EAAWG,aAKzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK+B,MAAM,yBACX,kBAACrD,EAAD,KACE,kBAACK,EAAD,KACE,kBAACC,EAAD,YACA,kBAACH,EAAD,MACA,kBAACK,EAAD,wBAEF,kBAACE,EAAD,CAAQ4C,IAAKzC","file":"component---src-pages-404-js-4da444c7e380984a08c6.js","sourcesContent":["const PI2 = Math.PI * 2;\n\nclass GlowParticle {\n  constructor({ x, y, radius, rgb }) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.rgb = rgb;\n\n    this.vx = Math.random() * 4;\n    this.vy = Math.random() * 4;\n\n    this.sinValue = Math.random();\n  }\n\n  animate(ctx, stageWidth, stageHeight) {\n    this.sinValue += 0.01;\n    this.radius += Math.sin(this.sinValue);\n    this.x += this.vx;\n    this.y += this.vy;\n\n    if (this.x < 0) {\n      this.vx *= -1;\n      this.x += 10;\n    } else if (this.x > stageWidth) {\n      this.vx *= -1;\n      this.x -= 10;\n    }\n\n    if (this.y < 0) {\n      this.vy *= -1;\n      this.y += 10;\n    } else if (this.y > stageHeight) {\n      this.vy *= -1;\n      this.y -= 10;\n    }\n\n    ctx.beginPath();\n\n    const g = ctx.createRadialGradient(\n      this.x,\n      this.y,\n      this.radius * 0.01,\n      this.x,\n      this.y,\n      this.radius\n    );\n\n    g.addColorStop(0, `rgba(${this.rgb.r}, ${this.rgb.g}, ${this.rgb.b}, 1)`);\n    g.addColorStop(1, `rgba(${this.rgb.r}, ${this.rgb.g}, ${this.rgb.b}, 0)`);\n\n    ctx.fillStyle = g;\n    ctx.arc(this.x, this.y, this.radius, 0, PI2, false);\n    ctx.fill();\n  }\n}\n\nexport default GlowParticle;\n","import React, { useState, useLayoutEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport SEO from 'components/seo';\nimport Layout from 'layout/layout';\nimport GlowParticle from 'utils/glowParticle';\n\nconst COLORS = [\n  { r: 255, g: 149, b: 0 }, // orange\n  { r: 255, g: 45, b: 85 }, // pink\n  { r: 175, g: 82, b: 222 }, // purple\n  { r: 255, g: 59, b: 48 }, // red\n  { r: 255, g: 204, b: 0 }, //yellow\n];\n\nconst NotFound = () => {\n  const canvasRef = useRef(null);\n  const [particles, setParticles] = useState([]);\n  const isCreated = useRef(false);\n  const requestRef = useRef(null);\n\n  useLayoutEffect(() => {\n    const canvasObj = canvasRef.current;\n    const ctx = canvasObj.getContext('2d');\n    let stageWidth = document.body.clientWidth;\n    let stageHeight = document.body.clientHeight;\n    const pixelRatio = window.devicePixelRatio > 1 ? 2 : 1;\n\n    const totalParticles = 5;\n    const maxRadius = Math.max(Math.floor(stageWidth / 3), 600);\n    const minRadius = Math.max(Math.floor(stageWidth / 5), 300);\n\n    const createParticles = () => {\n      let colorIndex = 0;\n      setParticles([]);\n\n      for (let i = 0; i < totalParticles; i++) {\n        const newParticle = new GlowParticle({\n          x: Math.random() * stageWidth,\n          y: Math.random() * stageHeight,\n          radius: Math.random() * (maxRadius - minRadius) + minRadius,\n          rgb: COLORS[colorIndex],\n        });\n\n        if (++colorIndex >= COLORS.length) colorIndex = 0;\n\n        setParticles((prevParticles) => [...prevParticles, newParticle]);\n      }\n    };\n\n    const render = () => {\n      ctx.clearRect(0, 0, stageWidth, stageHeight);\n      for (let i = 0; i < totalParticles; i++) {\n        const item = particles[i];\n        if (!item) return;\n        item.animate(ctx, stageWidth, stageHeight);\n      }\n      requestRef.current = requestAnimationFrame(render);\n    };\n\n    const resize = () => {\n      stageWidth = document.body.clientWidth;\n      stageHeight = document.body.clientHeight;\n\n      canvasObj.width = stageWidth * pixelRatio;\n      canvasObj.height = stageHeight * pixelRatio;\n      ctx.scale(pixelRatio, pixelRatio);\n      ctx.globalCompositeOperation = 'saturation';\n      ctx.clearRect(0, 0, stageWidth, stageHeight);\n\n      isCreated.current = true;\n      createParticles();\n    };\n\n    const init = () => {\n      if (!isCreated.current) resize();\n      else render();\n    };\n\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      window.removeEventListener('resize', resize);\n      window.cancelAnimationFrame(requestRef.current);\n    };\n  });\n\n  return (\n    <Layout>\n      <SEO title=\"손찬욱 Blog | Not found\" />\n      <Container>\n        <TitleWrap>\n          <Title>404</Title>\n          <Divider />\n          <Desc>Page not found</Desc>\n        </TitleWrap>\n        <Canvas ref={canvasRef} />\n      </Container>\n    </Layout>\n  );\n};\n\nconst Container = styled.main`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgb(255, 45, 85);\n`;\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 4px;\n  margin: 1rem 0 1.5rem 0;\n  background-color: rgba(255, 255, 255, 0.5);\n`;\n\nconst TitleWrap = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  z-index: 1;\n`;\n\nconst Title = styled.h1`\n  color: white;\n  font-size: 8rem;\n`;\n\nconst Desc = styled.h2`\n  color: white;\n  font-size: 2.5rem;\n`;\n\nconst Canvas = styled.canvas`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default NotFound;\n"],"sourceRoot":""}